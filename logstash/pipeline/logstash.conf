# 파일 하나 추가할때마다 input filter output 모두 각각 추가

input {
	beats {
		port => 5044
	}

	file {
		path => "/data/flows-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		sincedb_path => "/tmp/sincedb_Flows"
		add_field => { "[@metadata][type]" => "flows" }
		discover_interval => 60
	}

	file {
		path => "/data/apt_dns-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "apt_dns" }
	}
	
	file {
		path => "/data/banners_ptr-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "banners_ptr" }
	}
	
	file {
		path => "/data/banners-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "banners" }
	}
	
	file {
		path => "/data/bars_controllers-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "bars_controllers" }
	}
	
	file {
		path => "/data/bars_victims-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		sincedb_path => "/tmp/sincedb_BV"
		sincedb_clean_after => 0.5
		sincedb_write_interval => 10
		add_field => { "[@metadata][type]" => "bars_victims" }
	}
	
	file {
		path => "/data/beacons-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "beacons" }
	}
	
	file {
		path => "/data/compromised_hosts-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "compromised_hosts" }
	}
	
	file {
		path => "/data/cookies-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "cookies" }
	}
	
	file {
		path => "/data/darknet-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "darknet" }
	}
	
	file {
		path => "/data/nmap_dnsrr-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "nmap_dnsrr" }
	}
	
	file {
		path => "/data/nmap_fingerprint-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "nmap_fingerprint" }
	}
	
	file {
		path => "/data/nmap_port-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "nmap_port" }
	}
	
	file {
		path => "/data/open_ports-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "open_ports" }
	}
	
	file {
		path => "/data/os_fingerprint-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "os_fingerprint" }
	}
	
	file {
		path => "/data/pdns-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "pdns" }
	}
	
	file {
		path => "/data/scanner-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "scanner" }
	}
	
	file {
		path => "/data/ssh-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "ssh" }
	}
	
	file {
		path => "/data/urls-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "urls" }
	}
	
	file {
		path => "/data/useragents-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "useragents" }
	}
	
	file {
		path => "/data/x509-*.csv"
		mode => "read"
		start_position => "beginning"
		file_completed_action => "log_and_delete"
		file_completed_log_path => "/tmp/completed_file.log"
		add_field => { "[@metadata][type]" => "x509" }
	}
}

## add your filters / logstash plugins configuration here

filter {
	if "No results" in [message] {
		drop {}
	}
	if [types] == "flows" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","dst_ip_addr","dst_cc","proto","src_port","dst_port","tcp_flags","num_pkts","num_octets","a","b" ]
			skip_empty_columns => true
			separator => ","
		}
	}
	else if [@metadata][type] == "apt_dns" {
		csv {
			columns => [ "timestamp", "dnsrr", "ip_addr", "cc", "type", "ttl" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "banners_ptr" {
		csv {
			columns => [ "timestamp", "ip_addr", "cc", "asn", "ptr" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "banners" {
		csv {
			columns => [ "timestamp", "ip_addr", "cc", "port", "type", "data", "sub_type", "asn" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "bars_controllers" {
		csv {
			columns => [ "hostname","ip_addr","cc","proto","port","controller_uri","type","family","subfamily","first_seen","last_seen","active" ]
			skip_header => true
			separator => ","
		}
		date {
			match => [ "first_seen", "yyyy-MM-dd HH:mm:ss" ]
			timezone => "UTC"
			target => "first_seen"
		}
		date {
			match => [ "last_seen", "yyyy-MM-dd HH:mm:ss" ]
			timezone => "UTC"
			target => "last_seen"
		}
	}
	else if [@metadata][type] == "bars_victims" {
		csv {
			columns => [ "timestamp","host_ip_addr","host_cc","proto","port","controller","controller_ip_addr","controller_cc","controller_port","reputation_score","asn","family","subfamily" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "beacons" {
		csv {
			columns => [ "timestamp","client_ip_addr","client_cc","server_ip_addr","server_cc","server_comment","server_port","proto" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "compromised_hosts" {
		csv {
			columns => [ "timestamp","ip_addr","cc","asn","comment","rir","src_port","malware" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "cookies" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","src_port","dst_ip_addr","dst_cc","dst_port","host","uri","user_agent","referer","language","cookie","cookie_sha1" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "darknet" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","src_port","dst_port","proto","length","ip_version" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "nmap_dnsrr" {
		csv {
			columns => [ "timestamp","ip_addr","cc","dnsrr" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "nmap_fingerprint" {
		csv {
			columns => [ "timestamp","ip_addr","cc","os" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "nmap_port" {
		csv {
			columns => [ "timestamp","ip_addr","cc","proto","port","service","version" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "open_ports" {
		csv {
			columns => [ "timestamp","ip_addr","cc","proto","port","service","data","asn","asname" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "os_fingerprint" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","src_port","os","description","dst_ip_addr","dst_cc","dst_port","comment" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "pdns" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","proto","section","aa","qname","class","type","ttl","rdata","rdata_cc" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "scanner" {
		csv {
			columns => [ "ip_addr","cc","proto","ports","interval_probes_unique_dst_ip","interval_probes_unique_ports","interval_slash8_visited","total_ips_probed","asn" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "ssh" {
		csv {
			columns => [ "timestamp","ip_addr","cc","os_version","ssh_version","type","key","city","asn","add_timestamp" ]
			skip_header => true
			separator => ","
		}
		date {
			match => [ "add_timestamp", "yyyy-MM-dd HH:mm:ss" ]
			target => "add_timestamp"
			timezone => "UTC"
		}
	}
	else if [@metadata][type] == "urls" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","src_port","dst_ip_addr","dst_cc","dst_port","url" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "useragents" {
		csv {
			columns => [ "timestamp","src_ip_addr","src_cc","src_port","x_forwarded_for","via","dst_ip_addr","dst_cc","dst_port","user_agent","cpu","languages","character_sets" ]
			skip_header => true
			separator => ","
		}
	}
	else if [@metadata][type] == "x509" {
		csv {
			columns => [ "timestamp","ip_addr","cc","hostname","port","cn","altnames","c","o","email","subject","not_after","not_before","version","md5","sha1","issuer","issuer_cn","issuer_c","issuer_o","sig_algo","serial,pem" ]
			skip_header => true
			separator => ","
		}
	}
	date {
		match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
		timezone => "UTC"
		target => "timestamp"
	}
	mutate {
		remove_field => [ "@timestamp", "@version", "path", "message", "host", "tags" ]
	}
}

## Add your filters / logstash plugins configuration here

	# file {
	# 	path => "/tmp/logstash_debug.log"
	# }
output {
	if [types] == "flows" {
		file {
			path => "/tmp/logstash_debug.log"
		}
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-flows"
		}
	}
	else if [@metadata][type] == "apt_dns" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-apt_threats_dns"
		}
	}
	else if [@metadata][type] == "banners_ptr" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-banners_ptr"
		}
	}
	else if [@metadata][type] == "banners" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-banners"
		}
	}
	else if [@metadata][type] == "bars_controllers" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-bars_botnet_controllers"
		}
	}
	else if [@metadata][type] == "bars_victims" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-bars_observed_infected_victims"
		}
	}
	else if [@metadata][type] == "beacons" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-beacons"
		}
	}
	else if [@metadata][type] == "compromised_hosts" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-compromised_hosts"
		}
	}
	else if [@metadata][type] == "cookies" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-cookies"
		}
	}
	else if [@metadata][type] == "darknet" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-darknet"
		}
	}
	else if [@metadata][type] == "nmap_dnsrr" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-nmap_reverse_dns_lookups"
		}
	}
	else if [@metadata][type] == "nmap_fingerprint" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-nmap_os_fingerprinting"
		}
	}
	else if [@metadata][type] == "nmap_port" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-nmap_open_ports"
		}
	}
	else if [@metadata][type] == "open_ports" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-open_ports"
		}
	}
	else if [@metadata][type] == "os_fingerprint" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-os_fingerprinting"
		}
	}
	else if [@metadata][type] == "pdns" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-pdns_name-to-address_mapping"
		}
	}
	else if [@metadata][type] == "scanner" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-scanner"
		}
	}
	else if [@metadata][type] == "ssh" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-ssh_info"
		}
	}
	else if [@metadata][type] == "urls" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-urls"
		}
	}
	else if [@metadata][type] == "useragents" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-useragents"
		}
	}
	else if [@metadata][type] == "x509" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "recon-x509_certs"
		}
	}
}
